var plugin_path = '/_layouts/15/tasmc/smarty/assets/plugins/';

//Util funcs
eWave = {}

function getParameterByName(name, url) {
    if (!url) {
        url = window.location.href;
    }
    name = name.replace(/[\[\]]/g, "\\$&");
    var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
        results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, " "));
}

function detectMobile() {
    return (typeof window.orientation !== "undefined") || (navigator.userAgent.indexOf('IEMobile') !== -1);
}

function deleteCookie(cookieName) {
    var d = new Date();
    d.setTime(d.getTime() - 1000);
    var expires = "expires=" + d.toUTCString();
    document.cookie = cookieName + "=" + ";" + expires + ";path=/";
}

function logoutUser() {
    write2Log("Logout");
    $.ajax({
        type: 'POST',
        url: "/WebApi/api/LoginController/Logout",
        headers: { 'Content-Type': 'application/json' },
        success: function (json) {
            write2Log("Logout - Success");
            localStorage.clear();
            sessionStorage.clear();
            window.location.href = "/Be-Well/Pages/Login.aspx?#timeout";
            // window.location.reload();
        },
        error: function (response) {
            write2Log("Logout - Error");
            write2Log(response);
        }
    });
}



function PersonalAreaOTPLogin(_key) {

    var dtVal = $('#DOB').val();
    var IdVal = $('.LoginOtpFormContainer  #IDNumber').val();
    var otherIdVal = $('.LoginOtpFormContainer  #OtherNumber').val();

    try {
        var tz = IdVal;
        if (tz[0] == 0) {
            IdVal = tz.substring(1);
        }
    }
    catch (err) {

    }

    var isDateValid = (ValidateDate(dtVal) && dtVal != "");
    var isIdValid = $(".LoginOtpFormContainer  #IDNumber").val() != "" && IdValidate(IdVal);

    //if all validation are ok
    if ((isIdValid && isDateValid) || otherIdVal != "" && isDateValid && ($('input[name=idType]:checked').val() == "other")) {

        //hide validation errors
        $(".LoginOtpFormContainer  .help-block-date").css("visibility", "hidden");
        $(".LoginOtpFormContainer .help-block-id").css("visibility", "hidden");


        var DOB = ($(".beWell-login-form #DOB").val()).replace(/\-/g, '/');
        var ID = $(".LoginOtpFormContainer #IDNumber").val();
        var OTHER_ID = $('.LoginOtpFormContainer  #OtherNumber').val();
        var authType = "1";
        try {
           if ($('input[name=idType]:checked').val() == "id"){
                if (ID[0] == 0) {
                    ID = ID.substring(1);
                }
           }
           else
           {
               ID = OTHER_ID;
               authType = "2";
           }
        }
        catch (err) {

        }


        showLoader();
        $.ajax({
            type: 'POST',
            url: "/webapi/api/LoginController/SendOTP?" + 'ID=' + ID + '&DOB=' + DOB + '&authType=' + authType + "&res=" + _key,
            headers: { 'Content-Type': 'application/json' },

            success: function (response) {
                grecaptcha.reset();
                $(".OtpCodeSendAgain").attr("onclick", "grecaptcha.execute()");
                console.log("getting Code OTP success: " + response);
                $(".LoginOtpFormContainer").hide();
                $(".loginOtpCodeContainer").show();
                hideLoader();
            },
            error: function (response) {
                grecaptcha.reset();
                console.log("getting Code OTP Error: " + response);
                $(".LoginOtpFormContainer .help-block-date").text(response.responseJSON.Message);
                $(".LoginOtpFormContainer .help-block-date").css("visibility", "visible");
                hideLoader();
            }
        });

    }

    else {
        grecaptcha.reset();
        if (!isDateValid) {
            $(".LoginOtpFormContainer .help-block-date").text(" תאריך לידה לא תקין :  dd/mm/yyyy");
        }

        $(".LoginOtpFormContainer .help-block-date").css("visibility", (isDateValid == false ? "visible" : "hidden"));

        $(".LoginOtpFormContainer  .help-block-id").css("visibility", (isIdValid == false ? "visible" : "hidden"));


        //if (!isDateValid) {
        //    $('.LoginOtpFormContainer #datetimepicker .error').css("visibility", "visible");
        //}
        //else {
        //    $('.LoginOtpFormContainer #datetimepicker .error').css("visibility", "hidden");
        //}

        //if (!isIdValid) {
        //    $(".LoginOtpFormContainer  .help-block-id ").css("visibility", "visible");
        //}
        //else {
        //    $(".LoginOtpFormContainer  .help-block-id ").css("visibility", "hidden");
        //}

        event.preventDefault();
    }
}
//else { $(".LoginOtpFormContainer  .help-block-id ").css("visibility", "visible"); }


$('.error').hide();

function ValidateDate(dtValue) {
    // var dtRegex = new RegExp(/\b\d{4}[\/-]\d{1,2}[\/-]\d{1,2}\b/);
    var dtRegex = new RegExp(/^(0?[1-9]|[12][0-9]|3[01])[\/\-](0?[1-9]|1[012])[\/\-]\d{4}$/);

    return dtRegex.test(dtValue);
}

function IdValidate(value) {
    var regEx = new RegExp(/^[+-]?\d+$/);
    return regEx.test(value);
}


function OTPCodeLogin() {

    var otpCode = $(".LoginOtpFormContainer #otpCode").val();
    var DOB = $(".LoginOtpFormContainer #DOB").val();
    var ID = $(".LoginOtpFormContainer #IDNumber").val();
    var otherIdVal = $('.LoginOtpFormContainer  #OtherNumber').val();
    var authType = "1";

    try {
        if (ID[0] == 0) {
            ID = ID.substring(1);
        }
        if ($('input[name=idType]:checked').val() == "other")
        {
            ID = otherIdVal;
            authType = "2";
        }
    }
    catch (err) {

    }

    var isValid = false;
    var regex = /^[0-9\s]*$/;
    isValid = regex.test($("#otpCode").val());

    if (isValid) {
        $(".be-well-wrapper .loginOtpCodeContainer .OtpCodeError.help-block").css("visibility:", "hidden");

        showLoader();
        $.ajax({
            type: 'POST',
            url: "/webapi/api/LoginController/AuthenticateOTP?" + 'OtpCode=' + otpCode + '&DOB=' + DOB + '&ID=' + ID+'&authType='+authType,
            headers: { 'Content-Type': 'application/json' },

            success: function (response) {
                console.log("login OTP success: " + response);

                SetLocalStorageFromUser(response);

                //If success redirect to source
                if (response.StatusMsg == "Success") {

                    $(".serviceError.help-block").css("visibility", "hidden");
                    var source = getParameterByName("Source");
                    var token = getParameterByName("token");
                    if (source != null) {
                        var href = decodeURIComponent(source);

                        if (token == "1") {
                            href += "?sessid=" + respons.Sessid;
                        }
                        window.location.href = href;

                    }
                    else {
                        window.location.href = loginDefaultSource;
                    }
                }

                hideLoader();
            },
            error: function (response) {
                console.log("login OTP Error: " + response);
                $(".serviceError.help-block").css("visibility", "visible");
                hideLoader();
            }
        });
    }
    else {
        $(".be-well-wrapper .loginOtpCodeContainer .OtpCodeError.help-block").css("visibility", "visible");
    }
}

//Dev : https://tasmcadmin.ewavetest.co.il/Pages/Payment.aspx?PatientID=0002654012&AppointmentNO=20372858&ServiceCode=I5347G
//test :  https://tasmcdev.tasmc.org.il/Be-Well/Pages/Payment.aspx?Pat_AppID=79736CA1F76F2398DAFCBFF67AE037BF&ServiceCode=I9197

//new : https://tasmcadmin.ewavetest.co.il/Pages/Payment.aspx?Pat_AppID=79736CA1F76F2398DAFCBFF67AE037BF&ServiceCode=I9197
https://tasmcadmin.ewavetest.co.il/Pages/Payment.aspx?Pat_AppID=90E451F7EF7D681101BDCCEA0AF35D44&ServiceCode=I9197
    function TelemedicinePayment(serviceCode, patnrANDvkgId) {
        showLoader();
        $.ajax({
            type: 'POST',
            url: "/WebApi/api/TelemedecineController/InitPelecardForm?serviceCode=" + serviceCode + "&patnrANDvkgId=" + patnrANDvkgId,
            //  data: JSON.stringify({ ServiceCode: '1111, AppointmentId: 1234,ClientId:5555 }),
            headers: { 'Content-Type': 'application/json' },
            success: function (response) {
                if (response == "-1") {
                    $(".PaymentResponseMSg").text(UIResource.Telemedecine_ServiceCode_Error); //אירעה תקלה : קוד שירות לא קיים.
                }
                else {
                    if (response == "PelecardInit") {
                        console.log("Pelecard Init URL Blocked. check the AppSettings");
                        $(".PaymentResponseMSg").text("תקלה בהצגת דף תשלום פליקארד.");
                    }
                    else {
                        jQuery("#iframeUrl").val(response);
                        $("#frmPeleCard").attr("src", jQuery("#iframeUrl").val());
                    }
                }
                hideLoader();
            },
            error: function (response) {
                hideLoader();
                console.log("InitPelecardForm API Controller Response - Error");
            }
        });
    }

function CheckServiceCodeValidity(CheckServiceCodeValidity) {
    var url = window.location.href;
    var patnrANDvkgId = url.substring(url.indexOf("Pat_AppID") + 10, url.indexOf("ServiceCode") - 1); // PatientId & appointmentID
    //  var ServiceCode = url.substring(url.indexOf("ServiceCode") + 12, url.indexOf("ServiceCode") + 17); // ServiceCode

    showLoader();
    $.ajax({
        type: 'POST',
        url: "/WebApi/api/TelemedecineController/CheckValidity?patnrANDvkgId=" + patnrANDvkgId,
        //  data: JSON.stringify({ ServiceCode: '1111, AppointmentId: 1234,ClientId:5555 }),
        headers: { 'Content-Type': 'application/json' },
        success: function (response) {

            if (response == "true") {
                //  $("#frmPeleCard").attr("src", jQuery("#iframeUrl").val());
                $("#paymentCheckBox").show();
                $(".CheckBoxText").show();
                hideLoader();
            }
            else {
                $(".PaymentResponseMSg").text(response);
                $("#paymentCheckBox").hide();
                $(".CheckBoxText").hide();
            }
            hideLoader();
            //  $("#frmPeleCard").attr("src", jQuery("#iframeUrl").val());
        },
        error: function (response) {

            write2Log("TelemedecineController Response - Error");

            hideLoader();
        }
    });
}

function GetUrlParameters() {
    var url = window.location.href;

    var patnrANDvkgId = url.substring(url.indexOf("Pat_AppID") + 10, url.indexOf("ServiceCode") - 1); // PatientId & appointmentID
    var ServiceCode = url.substring(url.indexOf("ServiceCode") + 12, url.indexOf("ServiceCode") + 18); // ServiceCode


    CheckServiceCodeValidity(patnrANDvkgId);
    // TelemedicinePayment(ServiceCode, AppointmentNO, PatientID);
}

function SetLocalStorageFromUser(user) {

    localStorage.setItem('FirstName', user.FirstName); // save use firstName,LastName,Id and statusMsg in localStorage;
    localStorage.setItem('LastName', user.LastName);

    localStorage.setItem('StatusMsg', user.StatusMsg);
    localStorage.setItem('TokenCreatedDate', user.TokenCreateDate);

    localStorage.setItem('Phone1', user.Phone1);
    localStorage.setItem('Phone2', user.Phone2);
    localStorage.setItem('City', user.City);
    localStorage.setItem('Address', user.Address);
    localStorage.setItem('Postal', user.Postal);
    localStorage.setItem('ExtPatientId', user.ExtPatientId);
    localStorage.setItem('IsTempPwd', user.IsTempPwd);
}

function GetFromStorageByKey(key) {
    return localStorage.getItem(key);
}



//----CheckIn Sending Form Data to WebApi Test -----
function SendCheckInFormData() {
    write2Log("Sending the checkin Form to webApi ");
    var PatientData = { PatientFullName: "Majd Salman", Unit: "MRI", AppointmentDate: Date(), InsurerFactor: "Klalit", DistrictDispenser: "Tel-Aviv", CommitmentNumber: 2631145, CommitmentExpiration: Date(), ServiceId: 3002 };

    $.ajax({
        type: 'POST',
        url: "/WebApi/api/CheckIn/CheckInFromSubmit",
        data: JSON.stringify(PatientData),
        contentType: 'application/json',
        success: function (json) {
            write2Log("WebApi Got The Client Object - Success");
            //   window.location.href = json.LoginUrl;
            // window.location.reload();
        },
        error: function (response) {
            write2Log("WebApi Response Error!");
            write2Log(response);
        }
    });
}



$.fn.pressEnter = function (fn) {

    return this.each(function () {
        $(this).bind('enterPress', fn);
        $(this).keyup(function (e) {
            if (e.keyCode == 13) {
                $(this).trigger("enterPress");
            }
        })
    });
}

$(document).ready(function () {
    eWave.search.Init();
    eWave.Navigation.Init();
    eWave.slider.Init();


    eWave.PageLayout.Init();
    eWave.LandmarksResources.Init();
    $("#OtherNumber").attr("placeholder", "Passport | Other");


    $("#topBar ul.top-links > li.logout ").prepend("<span>שלום, " + localStorage.FirstName + "</span>");

    if (window.location.href.indexOf("Login.aspx") > -1) {
        jQuery(".section-container.lobby-container").css("min-height", "550px");
    }


    if (window.matchMedia('(max-width: 992px)').matches) {
        jQuery("ul#topMain").prepend(jQuery("#topBar .container ul.top-links")); //Append HeaderLinks to Mobile Navigation.
    }

    //var defaultHeight = 90;
    //$(".bg-section1 .section-tab,.bg-section2 .section-tab,.bg-section3 .section-tab").each(function () {
    //    if (jQuery(this).height() > defaultHeight) {
    //        defaultHeight = jQuery(this).height();
    //    }
    //});
    //$(this).height(defaultHeight);

    jQuery(".breadCrumbs .s4-breadcrumb-arrowcont span:first").hide(); // hide the first seperate icon in the breadCrumbs
    if (jQuery("#topBar .container a.ichLogo").attr("href") != undefined && jQuery("#topBar .container a.ichLogo").attr("href").indexOf("/ichilov") > -1) {
        $(".medtourWrapper #topBar .container a.ichLogo").attr("href", UIResource.medTour_ichilovURL); // change logo url by language from resource 
    }
    else {
        jQuery("#topBar .container a.ichLogo").attr("href", UIResource.Ichiclov_logoURL_by_language); // change logo url by language from resource 
    }

    jQuery("#topBar .container .logoWithText img.logo").attr("src", UIResource.Ichiclov_logo_by_language); // change logo by language from resource 
    jQuery("#topBar .container a.lis-logo-container").attr("href", UIResource.lis_logoURL_by_language); // change logo url by language from resource 
    jQuery("#topBar .container a.dana-logo-container").attr("href", UIResource.dana_logoURL_by_language); // change logo url by language from resource 

    //if (window.location.href.toLowerCase().indexOf("/ar/") > -1) {
    //    jQuery("#topBar .container .logoWithText img.logo").attr("src", "/Style Library/Tasmc/images/TASMC_Slog_AR_Landscape.png");
    //    jQuery("#topBar .container a.ichLogo").attr("href", "/sites/ar/");
    //    jQuery("#topBar a.logo").attr("title", "المركز الطبي تل أبيب على اسم سوراسكي");
    //    jQuery("#topBar .container a.lis-logo-container").attr("href", '/sites/ar/Lis');
    //    jQuery("#topBar a.lisLogo").attr("title", 'مستشفى ليس للأمومة');
    //    jQuery("#topBar .container a.dana-logo-container").attr("href", '/sites/ar/Dana-Dwek');
    //    jQuery("#topBar a.dana-logo-container").attr("title", 'مستشفى دانا دويك للأطفال');
    //}
    //jQuery("#topBar .container a.ichLogo").focus();
    jQuery("#homepageH1").attr("title", UIResource.HomePageTitle);

    jQuery("#topBar .container .lisLogo img").attr("src", UIResource.Lis_logo_by_language);
    jQuery("#topBar .container .lisLogo img").attr("alt", UIResource.lisLogo);
    jQuery("#topBar .container .dana-logo-container img").attr("src", UIResource.Dana_logo_by_language);

    jQuery(".CurrentNavWraper ul li a:contains('לאחרונה')").parent().hide(); // in order to hide the לאחרונה Navigation li .

    $(".section-container .info-section-1 .text a").click(function () {
        window.top.location = "mailto:" + $(".section-container .info-section-1 .email-container .text a").text();
    });

    /*jQuery("div.side-nav li.list-group-item").each(function () {// SIDENAV hide "<" for titles without ul child ! 
        if (jQuery(this).has("ul").length == 0) {
            // jQuery(this).find("a.glyphicon").remove();
            jQuery(this).append("<span class='glyphicon glyphicon-menu-left'></span>");
            jQuery(this).find("a.glyphicon").hide();
        }
    });*/

    $(".indexGroup").each(function () {
        if ($(this).find(".indexSubGroup").length == 0)
            $(this).removeClass("toggleIndex");
    });

    jQuery(".indexGroup.toggleIndex .toggleIcon").on('click', function () {

        $(this).parents(".indexGroup").hasClass("active") ? $(this).parents('.indexGroup').removeClass("active") : $(this).parents(".indexGroup").addClass("active");

    });

    jQuery(".mobile-navigate-shortcuts").append(UIResource.Mobile_navigate_shortcuts);
    jQuery(".responsive-table").ngResponsiveTables({
        smallPaddingCharNo: 13,
        mediumPaddingCharNo: 18,
        largePaddingCharNo: 30
    });

    // side navigation: parent shown when the child have selected class
    jQuery(".CurrentNavWraper .side-nav li.list-group-item ul li.selected a").parents().eq(2).addClass("active");
    jQuery(".CurrentNavWraper .side-nav a.glyphicon").parents().eq(2).find("glyphicon").removeClass("glyphicon-menu-left");
    jQuery(".CurrentNavWraper .side-nav a.glyphicon").parents().eq(2).find("glyphicon").addClass("glyphicon-menu-down");

    if (jQuery(".CurrentNavWraper .side-nav li.list-group-item").hasClass("active")) {
        jQuery(".CurrentNavWraper .side-nav li.list-group-item.active a.glyphicon").removeClass("glyphicon-menu-left");
        jQuery(".CurrentNavWraper .side-nav li.list-group-item.active a.glyphicon").addClass("glyphicon-menu-down");
    }

    jQuery(".CurrentNavWraper .side-nav a.glyphicon").unbind().click(function () {
        if (jQuery(this).hasClass("glyphicon-menu-left")) {
            jQuery(this).parent().addClass("active");
            jQuery(".CurrentNavWraper .side-nav li.list-group-item ul li.selected a").parents().eq(1).addClass("active");
            jQuery(this).removeClass("glyphicon-menu-left");
            jQuery(this).addClass("glyphicon-menu-down");
        }
        else {
            jQuery(this).removeClass("glyphicon-menu-down");
            jQuery(this).addClass("glyphicon-menu-left");
            jQuery(this).parent().removeClass("active");

        }
    });



    jQuery(".actitvites-btn-mobile").click(function () {

        if (jQuery(this).children().hasClass("glyphicon-plus")) {
            jQuery(".glyphicon-plus").addClass("glyphicon-minus");
            jQuery(".glyphicon-minus").removeClass("glyphicon-plus");
            $('.btn-info').removeClass('stickyActivitis');
        }
        else {
            jQuery(".glyphicon-minus").addClass("glyphicon-plus");
            jQuery(".glyphicon-plus").removeClass("glyphicon-minus");
            $('.btn-info').addClass('stickyActivitis');

        }
    });
    jQuery("#topNav .menu-container .search input,.search-box.over-header input").attr("placeholder", UIResource.free_text_search_text); //UIResource.free_text_search_text // place holder resource for search input on desktop

    jQuery("#topBar a.logo").attr("title", UIResource.homepageLogo);

    jQuery("#topBar a.coin").attr("title", UIResource.coin);
    jQuery("#topBar a.coin").attr("href", UIResource.coinLink);

    jQuery("#topBar a.lisLogo").attr("title", UIResource.lisLogo);
    jQuery("#topBar a.bewellLogo").attr("title", UIResource.bewellLogo);
    jQuery("#topBar a.lis-mommy-logo-container").attr("title", UIResource.mommy_lis_Logo);
    jQuery("#topBar a.lis-mommy-logo-container img").attr("alt", UIResource.lis_mommy_logoImg);
    jQuery("#topBar a.dana-logo-container").attr("title", UIResource.danaLogo);


    if (window.location.href.indexOf("/ru/ichilov/") > -1) {
        jQuery("a.coin.logo").attr("href", "/sites/ru/ichilov/Pages/akkreditaciya-jci.aspx");
        // $('.link-to-all.surgeriesLink .searchAllTeamUnit').attr('href', UIResource.medTour_RelatedSurgeriesUrl);
    }
    if (window.location.href.indexOf("/en/ichilov/") > -1) {
        jQuery("a.coin.logo").attr("href", "/sites/en/ichilov/Pages/jci.aspx");
        // $('.link-to-all.surgeriesLink .searchAllTeamUnit').attr('href', UIResource.medTour_RelatedSurgeriesUrl);
    }


    //  jQuery("#topBar .logo img.logo").attr("src", UIResource.logo_image);


    jQuery("#skipToPageContentID").click(function () {
        $("#s4-workspace,body").scrollTo(jQuery(".breadCrumbs"), 800, { offset: -240 }); // jump to page content 
    });

    if (window.matchMedia('(min-width: 992px)').matches) {  // cancel sticky header on 992px media query  


        var stickyNavTop = $('#header').offset().top;

        var stickyNav = function () {
            var scrollTop = $("#s4-workspace").scrollTop();

            if (scrollTop > stickyNavTop) {
                $('#header').addClass('sticky');
                jQuery(".font-lato").addClass("font-lato-sticky");
                jQuery(".btn-info").addClass("btn-info-sticky");




            } else {
                $('#header').removeClass('sticky');
                jQuery(".font-lato").removeClass("font-lato-sticky");
                jQuery(".btn-info").removeClass("btn-info-sticky");
            }
        };

        $("#s4-workspace").scroll(function () {
            stickyNav();
        });
    }

    var stickyNavTopActivites = $('#header').offset().top;
    var stickyMobileActivities = function () {
        var scrollTop = $("#s4-workspace").scrollTop();
        if (scrollTop > stickyNavTopActivites) {
            jQuery("#topNav,#topBar,#header").addClass("sticky");
            $('.btn-info').addClass('stickyActivitis');
            if ($("#activitiesTamplate")[0] != undefined) {
                jQuery(".actitvites-btn-mobile").show();
                jQuery(".glyphicon-minus").addClass("glyphicon-plus");
                jQuery(".glyphicon-plus").removeClass("glyphicon-minus");
            }
        }
        else {
            $('.btn-info').removeClass('stickyActivitis');
            jQuery("#topNav,#topBar,#header").removeClass("sticky");

            jQuery(".glyphicon-plus").addClass("glyphicon-minus");
            jQuery(".glyphicon-minus").removeClass("glyphicon-plus");


        }
    };

    if (window.matchMedia('(max-width: 992px)').matches) {  // cancel sticky header on 992px media quiry 
        $("#s4-workspace").scroll(function () {
            stickyMobileActivities();
        });
    }
    if ($("#scrollToUnitDetails").length == 0) {
        $(".skipToContactUs").hide();
    }

    if (window.matchMedia('(max-width: 768px)').matches) {
        if (jQuery(".page-header .title-wrapper h1").height() + jQuery(".page-header .title-wrapper h2").height() >= jQuery(".headerImage img").height()) { // comparing header title and put it in image bg wrapper height for mobile problem. 
            jQuery(".headerImage img").height(jQuery(".page-header .title-wrapper h1").height() + jQuery(".page-header .title-wrapper h2").height() + 16);
        }
    }



    // contact us mail , fixing Phone input validation for more than 9 numbers/ : +972-523865245

    if (window.location.href.indexOf("/en/") > -1 || window.location.href.indexOf("/ru/") > -1) {
        $('#ContactUsMailForm #ContactPhoneNumber').blur(function (e) {
            if (validatePhone('ContactPhoneNumber')) {
                $('#ContactUsMailForm #spnPhoneStatus').html('');
            }
            else {
                $('#ContactUsMailForm #spnPhoneStatus').html('Please insert valid phone number');
                $('#ContactUsMailForm #spnPhoneStatus').css('color', '#d90000');
            }
        });
    }


    //-------- Telemedecine payment ------------------

    $('#paymentCheckBox').change(function () {

        var url = window.location.href;
        var patnrANDvkgId = url.substring(url.indexOf("Pat_AppID") + 10, url.indexOf("ServiceCode") - 1); // PatientId & appointmentID
        var ServiceCode = url.substring(url.indexOf("ServiceCode") + 12, url.indexOf("ServiceCode") + 18); // ServiceCode

        $(this).hide();
        $(".CheckBoxText").hide();
        if (this.checked) {
            TelemedicinePayment(ServiceCode, patnrANDvkgId); // if checkbox checked, show Pelecard Iframe to pay
        }
        else {
            $("#frmPeleCard").hide();
        }
    });





    if (window.location.href.indexOf('#timeout') > -1) {
        LocalAndSessionStorageClear();
    }

    /* if (localStorage.StatusMsg == "Success") {
 
         inActiveTimeOutDialog();
     }*/



}); // end of Ready


function LocalAndSessionStorageClear() {
    //localStorage.clear();
    //sessionStorage.clear();
    logoutUser();
}

function RedirectIfLoggedIn() {
    var currUrl = window.location.href.toLowerCase();
    var currLoginPageUrl = loginPage.toLowerCase();

    if (currUrl.includes(currLoginPageUrl)) {
        var isTemp = GetFromStorageByKey('IsTempPwd');
        if (isTemp.toLowerCase() === 'true') {
            window.location = passwordResetUrl;
        }
        else {
            window.location = loginDefaultSource;
        }
    }
}



function inActiveTimeOutDialog() {
    var count = 420;
    $.timeoutDialog({
        timeout: count,
        countdown: 60,
        title: 'ניתוק עקב חוסר פעילות',
        message: 'בעוד {0} תנותקו עקב חוסר פעילות',
        question: 'האם ברצונך להתנתק כעת? ',
        keep_alive_button_text: 'הישאר מחובר',
        sign_out_button_text: 'התנתק',
        keep_alive_url: '/WebApi/api/LoginController/TimeOutResponseDialog',
        logout_url: '/WebApi/api/LoginController/Logout',
        logout_redirect_url: "/Be-Well/Pages/Login.aspx?#timeout",
        restart_on_yes: true,
        dialog_width: 350
    });
}

// contact us mail , fixing Phone input validation for more than 9 numbers/ : +972-523865245
function validatePhone(ContactPhoneNumber) {
    var phoneVal = document.getElementById(ContactPhoneNumber).value;
    var phoneLength = phoneVal.length;

    var filter = /^[0-9-+]+$/;
    if (filter.test(phoneVal) && phoneLength >= 7) {
        return true;
    }
    else {
        return false;
    }
}


function Telemedicine() {
    var response = $("[id$=iframeUrl]").val();
    if (response != undefined) {
        document.getElementById('frmPeleCard').src = response;
        $("#frmPeleCard").show();
        if ($(window).width() < 500) { $("#frmPeleCard").height(700); }
        location.href = "#";
        location.href = "#frmPeleCard";
    }
    else {
        console.log("error");

    }
}
eWave.LandmarksResources = {
    Init: function () {
        jQuery("#topBar .logo").attr("role", UIResource.landmark_Banner);
        jQuery("#topBar .logo,#topBar .container ul.top-links,header#topNav,.bullets-container,#footer .footer-links,.paragraph-anchors,.item-bullets .section-subtitles").attr("role", UIResource.landmark_Navigation);
        jQuery("#DeltaPlaceHolderMain").attr("role", UIResource.landmark_Main);
        jQuery(".ContactUsContainer,#FormClubContactUs").attr("role", UIResource.landmark_Form);
        jQuery("#footer > .copyright").attr("role", UIResource.landmark_ContentInfo);
        jQuery(".unit-container .page-content-container").attr("role", UIResource.landmark_Complementary);
        jQuery(".side-nav-social-media-container").attr("role", UIResource.landmark_other_Complementary);

        jQuery(".copyRightHidden").text(UIResource.landmark_copyRightHidden);
        jQuery(".sideNav-Hidden").text(UIResource.landmark_sideNavHidden);
        jQuery(".section-subtitlesHidden").text(UIResource.landmark_subtitlesHidden);
        jQuery(".topNavHidden").text(UIResource.landmark_topNavHidden);
        jQuery(".HiddenTopBarHeader").text(UIResource.landmark_topBarHidden);
        jQuery(".HiddenPageHeader").text(UIResource.landmark_PageHeaderHidden);
        jQuery(".HiddenFooterHeader").text(UIResource.landmark_FotterHeaderHidden);
        jQuery(".HiddenActivitiesHeader").text(UIResource.landmark_ActivitiesHeaderHidden);
    }
}

function escapeRegExp(string) {
    return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'); // $& means the whole matched string
}

function validateNewPassword(tempPassVal, newPassVal, newPassVal2) {

    if (tempPassVal && newPassVal && newPassVal2) {

        if (newPassVal === newPassVal2) {

            var changePassRegex = new RegExp("(?=^.{6,6}$)(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\s)[0-9a-zA-Z!@#$%^&*()]*$");

            var isValid = changePassRegex.test(newPassVal) && changePassRegex.test(newPassVal2);

            return isValid;

        }

        return false;

    }

    return false;

}


eWave.PageLayout = {
    Init: function () {
        //In most layouts, the the content of the page is not the most right column.
        //when bootstrap breaks the columns horizontically, most right column appears first, which causes the content to be at the bottom (with the title for example).
        //This script makes sure the when we move to the tablet view (in this view the bootstrap starts to break the columns), we move most right content unser the main content.
        var desktopMedia = window.matchMedia("(max-width: 991px)");
        desktopMedia.addListener(eWave.PageLayout.View);
        eWave.PageLayout.View(desktopMedia);

        eWave.LandmarksResources.Init();


    },
    View: function (mq) {
        var $mainContent = jQuery(".page-content-container");
        var $firstColumn = jQuery(".page-side-bar");
        var $firstColumnContent = jQuery(".page-side-bar-content");

        if ($firstColumn.length != 0) {
            if (mq.matches == true) { //Tablet, move the content to the top of the page
                $firstColumnContent.appendTo($mainContent);
            }
            else //Desktop, return the right side content to the right.
            {
                $firstColumnContent.appendTo($firstColumn);
            }
        }

    }
};



eWave.Graph = {
    MonthColors: ["#4F7AA0", "#66c2ce", "#6bc452", "#494A4A"],
    FormatMonthData: function (array) {
        for (i = 0; i < array.length; i++) {
            array[i].color = eWave.Graph.MonthColors[i];
            array[i].yAxis = eWave.Graph.FormatDate(array[i].Date);
        }
        return array;
    },
    Format3MonthData: function (triMonthsDataArr, dateVersion) {
        var finalDataArr = [];
        var currentMonth = -1;
        var index = 0;

        finalDataArr.push({});
        for (var i = 0; i < triMonthsDataArr.length; i++) {
            var item = triMonthsDataArr[i];
            //get index
            var itemMonth = (new Date(item.Date)).getMonth();
            //var index = (itemMonth > currentMonth) ? 2 - ((11 + currentMonth) - itemMonth) : 2 - (currentMonth - (itemMonth + 1));
            if (currentMonth != itemMonth && currentMonth != -1) {
                index++;
                finalDataArr.push({});
            }
            currentMonth = itemMonth;
            finalDataArr[index].MonthAndYear = eWave.Graph.FormatDate(item.Date, dateVersion);
            switch (item.Code) {
                case "1": finalDataArr[index].Surgeries = item.Value;
                    break;
                case "2": finalDataArr[index].ER = item.Value;
                    break;
                case "4": finalDataArr[index].Hospitalize = item.Value;
                    break;
                case "3": finalDataArr[index].SpecialistClinics = item.Value;
                    break;
                case "9": finalDataArr[index].SurgeriesLis = item.Value;
                    break;
                case "10": finalDataArr[index].ERLis = item.Value;
                    break;
                case "11": finalDataArr[index].SpecialistClinicsLis = item.Value;
                    break;
                case "12": finalDataArr[index].HospitalizeLis = item.Value;
                    break;
            }
        }
        if (window.location.pathname.indexOf("sites/en") != -1 || window.location.pathname.indexOf("sites/ru") != -1) {
            finalDataArr.reverse();
        }
        return finalDataArr;
    },
    FormatDate: function (strDate, version) {
        moment.locale(_spPageContextInfo.currentUICultureName.split('-')[0])
        var date = moment(new Date(strDate));
        if (version == "SHORT") {
            return date.format("MMM") + " " + date.format("YY");
        }
        else {
            return date.format("MMMM") + " " + date.format("Y");
        }
    },

    GetBICategoriesCode: function (babysDataArr) {
        var elementSelector;
        for (var i = 0; i < babysDataArr.length; i++) {
            if (babysDataArr[i].Code == "6") {
                elementSelector = ".result.boys .result-number";
            }
            else if (babysDataArr[i].Code == "7") {
                elementSelector = ".result.girls .result-number";
            }
            else if (babysDataArr[i].Code == "8") {
                elementSelector = ".result.twins .result-number";
            }
            else if (babysDataArr[i].Code == "5") {
                elementSelector = ".result.totalBirth .result-number";
            }

            jQuery(elementSelector).text(Number(babysDataArr[i].Value).toLocaleString('en'));
        }
    }
}

eWave.Navigation = {
    Init: function () {
        jQuery("ul#topMain li.dropdown").before().click(function (e) {
            jQuery(this).find(".dropdown-menu.has-topBar").toggleClass("NavCollapseShow");
            if (!jQuery(this).find(".dropdown-menu.has-topBar").hasClass("NavCollapseShow")) {
                jQuery(this).find(".dropdown-menu.has-topBar").hide();
            }
            jQuery(this).has("ul").find("a").parent().toggleClass("glyphicon glyphicon-triangle-bottom");
            jQuery(this).has("ul").find("a").parent().toggleClass("glyphicon glyphicon-triangle-left");
        });
        $("header#topNav li.dropdown").mouseenter(function (event) {
            $(this).attr("aria-hidden", "false");
            $(this).find(".dropdown-menu").attr("aria-hidden", "false");
            $(this).find(".dropdown-menu").attr("aria-expanded", "true");
        });
        $("header#topNav li.dropdown").mouseleave(function (event) {
            $(this).attr("aria-hidden", "true");
            $(this).find(".dropdown-menu").attr("aria-hidden", "true");
            $(this).find(".dropdown-menu").attr("aria-expanded", "false");
        });
        $("header#topNav li.dropdown").keyup(function (event) { // open nav on tab keydown
            $(".dropdown-menu").removeClass("dropdownNav");
            $("li.dropdown").attr("aria-hidden", "true");
            $("ul.dropdown-menu").attr("aria-hidden", "true");
            $("ul.dropdown-menu").attr("aria-expanded", "false");
            $(this).find(".dropdown-menu").addClass("dropdownNav");
            $(this).attr("aria-hidden", "false");
            $(this).find(".dropdown-menu").attr("aria-hidden", "false");
            $(this).find(".dropdown-menu").attr("aria-expanded", "true");
        });

        jQuery(".btn-mobile").click(function () {
            jQuery("#topNav button.btn-mobile i").toggleClass("glyphicon-remove");
            jQuery("#topNav button.btn-mobile i").toggleClass("glyphicon-menu-hamburger");



            if (jQuery(".actitvites-btn-mobile").children().hasClass("glyphicon-minus")) {
                jQuery(".glyphicon-minus").addClass("glyphicon-plus");
                jQuery(".glyphicon-minus").removeClass("glyphicon-minus");
                $('.btn-info').addClass('stickyActivitis');
            }


            jQuery(".GlobalNavWraper .search-box").fadeOut("fast", function () {
                $(this).toggleClass("isActiveSearchBox");
            });
            jQuery("ul#topMain li.dropdown").has("ul").find("a").parent().addClass("glyphicon glyphicon glyphicon-triangle-bottom");
            jQuery("ul#topMain li.dropdown ul li a").removeClass("glyphicon glyphicon-triangle-bottom"); // second level remove plus icon 

            if (jQuery("#topNav .search a i").hasClass("glyphicon-remove")) {
                jQuery("#topNav .search a i").removeClass("glyphicon-remove");
                jQuery("#topNav .search a i").addClass("glyphicon-search");
            }
        });
    }
};

eWave.search = {

    Init: function () {
        jQuery("#HeaderSearchInput").attr("placeholder", UIResource.Header_SearchInput_placeholder)
        if (window.matchMedia('(max-width: 1200px) and (min-width:992px)').matches) {
            jQuery("header#topNav .search").addClass("minimizeSearchInput");
        }

        jQuery("header#topNav .search-icon-minimize").click(function () {
            jQuery(".topMain-search").toggleClass("minimizeSearchInput");


            if (jQuery(".topMain-search").hasClass("minimizeSearchInput")) {
                jQuery("header#topNav .search i.nav-search").hide();
                jQuery(this).removeClass("glyphicon glyphicon-remove");
            }
            else {
                jQuery(this).addClass("glyphicon glyphicon-remove");
                jQuery("header#topNav .search i.nav-search").show();
            }
        });



        jQuery(".topNav-search").click(function () {
            jQuery(".GlobalNavWraper .search-box").slideToggle("fast", function () {
                jQuery(".navbar-collapse").removeClass("in");
                $(this).toggleClass("isActiveSearchBox");
            });
            if (jQuery(".GlobalNavWraper .search-box").hasClass("isActiveSearchBox") == true) {
                jQuery(".navbar-collapse").removeClass("in");
            }
            if (jQuery("#topNav button.btn-mobile i").hasClass("glyphicon-remove")) {
                jQuery("#topNav button.btn-mobile i").removeClass("glyphicon-remove");
                jQuery("#topNav button.btn-mobile i").addClass("glyphicon-menu-hamburger");
            }
            jQuery("#topNav .search a i").toggleClass("glyphicon-remove");
            jQuery("#topNav .search a i").toggleClass("glyphicon-search");
        });



        //------------------- autoSuggest Search --------------------------
        $("#searchInput,header#topNav .search input,#header .search-box.over-header input").focusin(function () {
            var rootUrl = "";
            if (_spPageContextInfo.siteServerRelativeUrl != "/") {
                rootUrl = _spPageContextInfo.siteServerRelativeUrl;
            }
            if ((window.location.href.indexOf("/ru/ichilov/") > -1 || window.location.href.indexOf("/en/ichilov/") > -1)) {
                rootUrl = _spPageContextInfo.siteServerRelativeUrl + "/ichilov";
            }

            $(this).autocomplete({
                minLength: 2,
                source: function (request, response) {
                    $.ajax({
                        url: rootUrl + "/_api/web/lists/getbytitle('" + encodeURIComponent("רשימת מונחי חיפוש") + "')/items?$select=Title&$filter=substringof('" + encodeURIComponent(request.term) + "',Title)&$top=10",
                        type: "GET",

                        headers: {
                            "accept": "application/json;odata=verbose",
                        },
                        success: function (data) {
                            console.log(data.d.results);
                            var searchResult = [];
                            var dataArray = data.d.results;
                            for (var i in dataArray) {
                                searchResult.push({ "label": data.d.results[i].Title, "url": "" });
                            }
                            var results = $.ui.autocomplete.filter(searchResult, request.term);
                            response(results);
                        },
                        error: function (error) {
                            console.log(error);
                        }
                    });
                }, appendTo: jQuery(this).parent()

            });
        });




        jQuery(".topMain-search.search").show();
        $('.topMain-search input,  .topMain-search .icon-search').pressEnter(function () {
            var value = jQuery(this).val();
            var InputSelector = jQuery(".topMain-search");
            ValidationFunc(value, InputSelector);

        });

        $('.search-input').pressEnter(function () {
            var value = jQuery(this).val();
            var InputSelector = jQuery(this);
            ValidationFunc(value, InputSelector);
        });

        $('.search-input').keyup(function () {
            var test = new RegExp(UIResource.Search_Regex);
            var value = jQuery(this).val();
            if (value.match(test) == null) {
                jQuery(this).val(jQuery("#searchInput").val().substring(0, jQuery("#searchInput").val().length - 1));
            }
        });

        $('.topMain-search input').keyup(function () {
            var test = new RegExp(UIResource.Search_Regex);
            var value = jQuery(this).val();
            if (value.match(test) == null) {
                jQuery(this).val(jQuery(this).val().substring(0, jQuery(this).val().length - 1));
            }
        });


        $('.nav-search').click(function () {
            var value = jQuery(".topMain-search input").val();
            var InputSelector = jQuery(".topMain-search");
            ValidationFunc(value, InputSelector);
        });


        //----------- for mobile search ------------------
        $('#header .search-box.over-header input').keyup(function () {
            var test = new RegExp(UIResource.Search_Regex);
            var value = jQuery(this).val();
            if (value.match(test) == null) {
                jQuery(this).val("");
                jQuery("#searchInput").val(jQuery("#searchInput").val().substring(0, jQuery("#searchInput").val().length - 1));
            }
        });

        jQuery('.search-box .fa-search,.search-box .glyphicon.glyphicon-search').click(function () {
            var value = jQuery("#header .search-box.over-header input").val();
            var InputSelector = jQuery("#header .search-box.over-header input");
            ValidationFunc(value, InputSelector);
        });

        $('#header .search-box.over-header input').keydown(function (e) {
            if (e.keyCode == 13) {
                var value = jQuery("#header .search-box.over-header input").val();
                var InputSelector = jQuery("#header .search-box.over-header input");
                ValidationFunc(value, InputSelector);
            }
        });
        //----------------------------------------------------

        $('.plazma-search').click(function () {
            var value = jQuery("#searchInput").val();
            var InputSelector = jQuery("#searchInput");
            ValidationFunc(value, InputSelector);

        });

        function ValidationFunc(value, InputSelector) {
            $(InputSelector).removeClass("ErrorMsg");
            jQuery(".autoCompleteResults").hide();
            var test = new RegExp(UIResource.Search_Regex);

            if (value.match(test) == null) {
                $(InputSelector).addClass("ErrorMsg");
                //jQuery(".autoCompleteResults").show();
                jQuery("#searchInput").val("");


                // jQuery("#searchInput").tooltip({ trigger: 'manual' }).attr('data-original-title', UIResource.homepage_search_validation_msg).tooltip('show');
            }

            else {

                var siteUrl = _spPageContextInfo.siteServerRelativeUrl;
                if (siteUrl == "/") {
                    siteUrl = "";
                }

                var comma = "";
                //if ((window.location.href.indexOf("/ar/") > -1 || window.location.href.indexOf("/AR/") > -1) && (value.length > 0)) {
                //    comma = '"';
                //} we added this because results wasn't shown on arabic if we searched with comma.
                var ichilovSite = "/ichilov/";
                if ((window.location.href.toLowerCase().indexOf("/ichilov/") > -1)) {
                    window.location.href = siteUrl + eWave.Context.GetCurrentSiteUrl() + "/ichilov" + UIResource.search_results_page + "#k=" + comma + encodeURI(value) + comma;
                }
                if ((window.location.href.toLowerCase().indexOf("/ichilov/") == -1)) {
                    window.location.href = siteUrl + eWave.Context.GetCurrentSiteUrl() + UIResource.search_results_page + "#k=" + comma + encodeURI(value) + comma;
                }

            }
        }

    },
    ScopeSearchInit: function () {
        jQuery(".scoped-search").on("click", ".search", function () {
            eWave.search.PerformScopedSearch();
        });

        jQuery('.scoped-search input').pressEnter(function () {
            eWave.search.PerformScopedSearch();
        }).keydown(function () {
            jQuery(this).removeClass("ErrorMsg");
            jQuery(".scoped-search .error").hide();
        });
    },
    PerformScopedSearch: function () {
        var $input = jQuery(".scoped-search input");
        var text = $input.val();

        $input.removeClass("ErrorMsg");
        jQuery(".scoped-search .error").hide();
        $input.attr("aria-invalid", "false");

        var validRegx = new RegExp(UIResource.Search_Regex);

        if (text.match(validRegx) == null) {
            $input.addClass("ErrorMsg");
            $input.attr("aria-invalid", "true");
            jQuery(".scoped-search .error").show();
        }
        else {
            var scope = jQuery(".scoped-search .search").attr("data-scope");
            var k = encodeURIComponent($input.val().trim());
            //window.location.href = UIResource[scope + "_Results_Url"] + "#k=" + k;
            window.location.hash = "#k=" + k;
        }
    }
}

eWave.MommyLisFacebook = {
    Init: function () {

    }
}

eWave.Person = {
    Init: function () {

        eWave.Person.ToggleData();
        eWave.LandmarksResources.Init();
        $('.toggle-content').each(function () {

            if ($(this).find(".ms-rtestate-field").text().trim() == "") {
                $(this).parent().hide();
            }
        });

        if ($('.cv-info').children('.toggle:visible').length == 0) {
            $('.cv-info').hide();
        }

        eWave.Unit.GetUnitsByCurrentPage
            (
                function (data) {

                    if (data.d.query.PrimaryQueryResult.RelevantResults.Table.Rows.results.length > 0) {
                        jQuery(".units-links").removeClass("hidden");
                    }

                    $(data.d.query.PrimaryQueryResult.RelevantResults.Table.Rows.results).each(function (index, item) {
                        //alert(this.Cells.results[2].Key + ":" + this.Cells.results[2].Value);
                        var hasAppointment = item.Cells.results[3].Value;
                        var path = item.Cells.results[4].Value;
                        var code = item.Cells.results[5].Value;
                        var title = item.Cells.results[6].Value;
                        var ewUnit = item.Cells.results[7].Value;

                        path = path.replace(UIResource.site_admin_url, UIResource.site_anon_url);

                        //item units - get the firs only
                        var itemMainUnit = ewUnit.split('|')[1].substr(1).split(';')[0];

                        //Check if the unit is the one of the page units, and only then show it on the page.
                        var matchArray = jQuery.grep(eWave.Unit.CurrentPageUnits, function (str) {
                            return str == itemMainUnit;
                        });

                        if (matchArray.length > 0) {
                            jQuery(".units-links .sub-titles").append(jQuery("<li class=\"text\"><a href=\"" + path + "\">" + title + "</a></li>"));

                            if (hasAppointment == "1") {
                                jQuery(".proffesional-info-section .appointment").show("hidden").attr("href", UIResource.unit_appointment_url + code);

                            }
                        }

                    });
                },
                function (err) {
                    console.log(err);
                }
            );
    },
    ToggleData: function () {
        // person.aspx open\close all cv labels

        $('.cv-title-links a').click(function () {
            if (jQuery(this).hasClass("inactive") == false) {
                jQuery('.cv-title-links a').toggleClass("inactive");

                if (jQuery(this).hasClass("open") == true) {
                    jQuery(".toggle-title").parent().addClass("active");
                    jQuery(".cv-title-links .open").attr("aria-expanded", "true");
                    jQuery(".cv-title-links .close").attr("aria-expanded", "false");
                    jQuery(".toggle-title").attr("aria-expanded", "true");
                    jQuery(".toggle-content").slideDown();
                    jQuery(".toggle-content").attr("tabindex", "0");
                }
                else {
                    jQuery(".toggle-title").parent().removeClass("active");
                    jQuery(".toggle-title").attr("aria-expanded", "false");
                    jQuery(".cv-title-links .open").attr("aria-expanded", "false");
                    jQuery(".cv-title-links .close").attr("aria-expanded", "true");
                    jQuery(".toggle-content").slideUp();
                    jQuery(".toggle-content").attr("tabindex", "-1");
                }
            }
        });

        jQuery(".proffesional-info-section .toggle-title").click(function () {
            jQuery(this).parent().toggleClass("active");
            $(this).attr("aria-expanded", "false");
            $(this).next().attr("tabindex", "-1");
            jQuery(this).next().slideToggle();
            if (jQuery(this).parent().hasClass("active") == true) {
                $("#s4-workspace,body").scrollTo(jQuery(this), 850, { offset: -240 });
                $(this).attr("aria-expanded", "true");
                $(this).next().attr("tabindex", "0");
            }
        });
    }
}

eWave.slider = {
    Init: function () {
        jQuery("section#scrollto-section-1 li.video-container.isVideo ifame").height(jQuery(".sy-slides-wrap").height());

        jQuery(window).resize(function () {
            jQuery("section#scrollto-section-1 li.video-container.isVideo iframe").height(jQuery(".sy-slides-wrap").height());
            if (window.matchMedia('(max-width: 992px)').matches) {
                jQuery("section#scrollto-section-1 li.video-container.isVideo iframe").height(jQuery(".sy-slide img").height());
                jQuery(".sy-slides-wrap").height(jQuery(".sy-slide img").height());
            }
        });
        if (window.matchMedia('(max-width: 992px)').matches) {
            jQuery("section#scrollto-section-1 li.video-container.isVideo iframe,#scrollto-section-1").height(jQuery(".sy-slide img").height());
            jQuery("section#scrollto-section-1 .sy-slides-wrap").height(jQuery(".sy-slide img").height());
        }
    }
}

eWave.Article =
{
    RelatedArticles: function () {
        eWave.LandmarksResources.Init();

        $('.related-publications .related-article-text').each(function () {
            txt = $(this).text();
            if (txt.length > 63)
                $(this).text(txt.substring(0, 60).trim() + '...');
        });
        $('.related-publications .related-article-title').each(function () {
            var txt = $(this).text();
            if (txt.length > 45)
                $(this).text(txt.substring(0, 42).trim() + '...');
        });
    },
    AddAnchors: function () {
        var $headers = jQuery(".ms-rtestate-field h3");
        var isEmpty = 0;
        if ($headers.length > 0) {
            var $anchors = jQuery(".paragraph-anchors ul");
            $headers.each(function (index, item) {
                if (jQuery(item).text().trim() != '') {
                    $anchors.append('<li class="col-sm-6 col-xs-12 pull-left"><span class="paragraph-anchor-arrow"></span><a data-targetid="#anchor' + index + '" href="javascript:void(0);" class="paragraph-anchor">' + jQuery(item).text() + '</a></li>');
                    jQuery(item).attr("id", "anchor" + index);
                    isEmpty = 1;
                }
            });

            jQuery(".paragraph-anchors a").click(function () {
                $("#s4-workspace,body").scrollTo(jQuery(jQuery(this).attr("data-targetid")), 850, { offset: -240 });
            });

            jQuery(".paragraph-anchors").fadeIn();
        }
        if (isEmpty == 0) {
            jQuery(".paragraph-anchors").css("display", "none");
        }
        jQuery(".paragraph-anchors-Title").text(UIResource.Table_of_Contents);
    }

}

eWave.HomePage = {
    Init: function (e) {
        eWave.LandmarksResources.Init();

        window.responseAmCharsFlag = false;
        var sectionsNum = jQuery(".section").length;
        var index;
        $('section').each(function (i, obj) {
            jQuery(this).attr("data-section-title", jQuery(this).find(".ForsideNavTitle").text());
        });


        //for (index = 1; index <= sectionsNum + 1 ; index++) {
        //    jQuery(".bg-section" + index).attr("data-section-title", jQuery(".bg-section" + index + " .ForsideNavTitle").text());
        //}

        jQuery(document).ready(function () {


            // news ticker slider section
            jQuery(".NewsSliderControls a.start").hide();
            jQuery(".NewsSliderControls a.start").click(function () {
                jQuery(this).hide();
                jQuery(".NewsSliderControls a.stop").show();
            });
            jQuery(".NewsSliderControls a.stop").click(function () {
                jQuery(this).hide();
                jQuery(".NewsSliderControls a.start").show();


            });

            jQuery(".news-strip-container .NewsSliderControls a.start").click(function () {
                jQuery("ul.newsticker li").mouseleave();
            });
            jQuery(".news-strip-container .NewsSliderControls a.stop").click(function () {
                jQuery("ul.newsticker li").mouseenter();
            });
            $("ul.newsticker").mouseleave(function () {
                jQuery(".NewsSliderControls a.stop").show();
                jQuery(".NewsSliderControls a.start").hide();
            });


        });


        jQuery("#s4-workspace").sectionScroll({
            easing: 'easeInOutQuart',
            scrollDuration: 1200
        });



        if (window.matchMedia('(min-width: 992px)').matches) {  // cancel sticky header on 992px media quiry 
            var stickyNavTop = $('#header').offset().top;

            var stickyNav = function () {
                var scrollTop = $("#s4-workspace").scrollTop();

                if (scrollTop > stickyNavTop) {
                    $('#header').addClass('sticky');
                    jQuery(".font-lato").addClass("font-lato-sticky");
                    jQuery(".btn-info").addClass("btn-info-sticky");
                } else {
                    $('#header').removeClass('sticky');
                    jQuery(".font-lato").removeClass("font-lato-sticky");
                    jQuery(".btn-info").removeClass("btn-info-sticky");
                }
            };
            $("#s4-workspace").scroll(function () {
                stickyNav();
            });
        }

        var stickyNavTopActivites = $('#header').offset().top;
        var stickyMobileActivities = function () {
            var scrollTop = $("#s4-workspace").scrollTop();
            if (scrollTop > stickyNavTopActivites) {
                jQuery("#topNav,#topBar,#header").addClass("sticky");
                $('.btn-info').addClass('stickyActivitis');
                jQuery(".actitvites-btn-mobile").show();

                jQuery(".glyphicon-minus").addClass("glyphicon-plus");
                jQuery(".glyphicon-plus").removeClass("glyphicon-minus");
            }
            else {
                $('.btn-info').removeClass('stickyActivitis');
                jQuery("#topNav,#topBar,#header").removeClass("sticky");

                jQuery(".glyphicon-plus").addClass("glyphicon-minus");
                jQuery(".glyphicon-minus").removeClass("glyphicon-plus");

            }
        };

        if (window.matchMedia('(max-width: 992px)').matches) {  // cancel sticky header on 992px media quiry 
            $("#s4-workspace").scroll(function () {
                stickyMobileActivities();
            });
        }

        // news ticker -  EndLess River plugin
        if ($('#ticker').length > 0 && $("#ticker").html().replace(/\ /g, '').length > 1) {
            $("#ticker").webTicker();
        }

        jQuery(".tickercontainer").parent().addClass("tickercontainer-parent");


        setTimeout(function () {
            jQuery(".section-bullets li.active").click();
        }, 50);

        if ((navigator.appName == 'Microsoft Internet Explorer' || ((navigator.userAgent.match(/Trident/)) || (navigator.userAgent.match(/rv:11/)) || (typeof $.browser !== "undefined" && $.browser.msie == 1)) && window.location.pathname.indexOf("/ichilov") > -1)) {
            eWave.HomePage.HomePageBI(1, 2, 4, 3, 6, 7, 8);
        }
        if (window.matchMedia('(max-width: 992px)').matches) {
            eWave.HomePage.HomePageBI(1, 2, 4, 3, 6, 7, 8, 5);
        }

    },
    HomePageBI: function (surgeriesCode, ERCode, hospitalizeCode, SpecialistClinicsCode, boysCode, girlsCode, twinsCode, totalBirthCode) {
        var url = "/WebApi/api/bi/GetByCodes";
        var options = {};
        options.url = url;
        options.data = {};


        options.data.codes = [surgeriesCode, ERCode, hospitalizeCode, SpecialistClinicsCode, boysCode, girlsCode, twinsCode];
        if (totalBirthCode != undefined) {
            options.data.codes.push(totalBirthCode);
        }
        //options.data.codes = [ERCode, HospitalizeCode, SurgeriesCode];
        options.type = 'GET';
        if (responseAmCharsFlag != true) { // this for get data just for one time when we get amchars section by mousewheel or nav bullets. 
            $.ajax(options).done(function (response) {
                if (response != null) {
                    if (response.length != 0) {
                        responseAmCharsFlag = true;
                        //var arrResponse = jQuery.parseJSON(response);

                        //Init Babys with data
                        var babysDataArr = jQuery.grep(response, function (item, index) {
                            return (item.Code == boysCode || item.Code == girlsCode || item.Code == twinsCode || item.Code == totalBirthCode);
                        });
                        eWave.Graph.GetBICategoriesCode(babysDataArr);

                        //Init chart with data
                        var triMonthsDataArr = jQuery.grep(response, function (item, index) {
                            return (item.Code == surgeriesCode || item.Code == ERCode || item.Code == hospitalizeCode || item.Code == SpecialistClinicsCode);
                        });

                        try {
                            var chart = AmCharts.makeChart("BIChartDiv", {
                                "type": "serial",
                                "theme": "light",
                                "categoryField": "MonthAndYear",
                                "startDuration": 1,
                                "fontFamily": "almonidl,Arial,Helvetica,sans-serif",
                                "fontSize": 20,
                                "marginRight": 30,
                                "graphs": [
                                    {
                                        "balloonText": UIResource.BiHomePage_surgeries_text + ":[[value]]",
                                        "fillAlphas": 0.8,
                                        "id": "AmGraph-1",
                                        "lineAlpha": 0.2,
                                        "title": "ניתוחים",
                                        "type": "column",
                                        "fillColors": "#494A4A",
                                        "lineColor": "#494A4A",
                                        "labelText": "[[value]]",
                                        "labelPosition": "top",
                                        "valueField": "Surgeries",
                                        "color": "#00000"
                                    },
                                    {
                                        "balloonText": UIResource.BiHomePage_Hospitalization_text + ":[[value]]",
                                        "fillAlphas": 0.8,
                                        "id": "AmGraph-2",
                                        "lineAlpha": 0.2,
                                        "title": "אישפוז",
                                        "type": "column",
                                        "fillColors": "#22808b",
                                        "lineColor": "#22808b",
                                        "labelText": "[[value]]",
                                        "labelPosition": "bottom",
                                        "valueField": "Hospitalize",
                                        "color": "#FFFFFF"
                                    },
                                    {
                                        "balloonText": UIResource.BiHomePage_EmergencyRoom_text + ":[[value]]",
                                        "fillAlphas": 0.8,
                                        "id": "AmGraph-3",
                                        "lineAlpha": 0.5,
                                        "title": "מיון",
                                        "type": "column",
                                        "fillColors": "#4b7599",
                                        "lineColor": "#4b7599",
                                        "labelText": "[[value]]",
                                        "labelPosition": "bottom",
                                        "valueField": "ER",
                                        "color": "#FFFFFF"
                                    },
                                    {
                                        "balloonText": UIResource.Expert_Clinics_Title + ":[[value]]",
                                        "fillAlphas": 0.8,
                                        "id": "AmGraph-4",
                                        "lineAlpha": 0.5,
                                        "title": "מרפאות מומחים",
                                        "type": "column",
                                        "fillColors": "#438531",
                                        "lineColor": "#438531",
                                        "labelText": "[[value]]",
                                        "labelPosition": "bottom",
                                        "valueField": "SpecialistClinics",
                                        "color": "#FFFFFF"
                                    }
                                ],
                                "guides": [],
                                "valueAxes": [
                                    {
                                        "id": "ValueAxis-1",
                                        "position": "left",
                                        "axisAlpha": 0,
                                        "dashLength": 5,
                                        "labelsEnabled": true,
                                        "labelOffset": 20
                                    }
                                ],
                                "categoryAxis": {
                                    "gridThickness": 0,
                                    "axisColor": "#d9d9d9"

                                },
                                "responsive": {
                                    "enabled": true,
                                    "rules": [
                                      {
                                          "maxWidth": 800,
                                          "overrides": {
                                              "rotate": true,
                                              "marginRight": 20,
                                              "graphs": [{
                                                  "labelPosition": "right",
                                                  "labelOffset": 50,
                                                  "color": "#00000",
                                                  "showAllValueLabels": true
                                              },
                                              {
                                                  "labelPosition": "right",
                                                  "color": "#FFFFF",
                                                  "labelOffset": 50,
                                                  "showAllValueLabels": true
                                              },
                                              {
                                                  "labelPosition": "right",
                                                  "labelOffset": 50,
                                                  "color": "#FFFFF",
                                                  "showAllValueLabels": true
                                              },
                                              {
                                                  "labelPosition": "left",
                                                  "labelOffset": 50,
                                                  "color": "#FFFFF",
                                                  "showAllValueLabels": true
                                              }
                                              ],
                                              "categoryAxis": {
                                                  "labelOffset": 40,
                                                  "autoWrap": true
                                              },
                                              "valueAxes": {
                                                  "labelsEnabled": false
                                              },
                                              "dataProvider": eWave.Graph.Format3MonthData(triMonthsDataArr, "SHORT")
                                          }
                                      },
                                      {
                                          "maxWidth": 420,
                                          "overrides": {
                                              "rotate": true,
                                              "marginRight": 20,
                                              "graphs": {
                                                  "color": "#00000",
                                                  "showAllValueLabels": true
                                              },
                                              "categoryAxis": {
                                                  "position": "right",
                                                  "tickPosition": "start",
                                                  "gridPosition": "start",
                                                  "axisThickness": 0
                                              },
                                              "dataProvider": eWave.Graph.Format3MonthData(triMonthsDataArr, "SHORT")
                                          },
                                      }

                                    ]
                                },
                                "allLabels": [],
                                "balloon": {},
                                "titles": [],
                                "dataProvider": eWave.Graph.Format3MonthData(triMonthsDataArr)
                            });
                        }
                        catch (error) {
                            console.error(error);
                        }

                        //jQuery("#UnitBi .number").text(Number(yearData[0].Value).toLocaleString('en'));

                    }
                    else {
                        jQuery(".HomePageBIConatiner").hide();
                        console.log("didnt find data for the specified unit codes");
                    }
                }
                else {
                    jQuery(".HomePageBIConatiner").hide();
                    console.log("failed to get bi data, see server log for more details");
                }
            }).fail(function (data) {
                jQuery(".HomePageBIConatiner").hide();
                console.log(data);
            });
        }


        $(".check-time-input").select2({
            "language": {
                "noResults": function () {
                    return UIResource.No_Results_found;
                }
            },

            escapeMarkup: function (markup) {
                return markup;
            }
        });


        $(".check-time-input").on("select2:open", function (e) {
            $('.select2-container').keydown(function (e) {
                console.log(e.which);
                if (e.which == 40 || e.which == 38) {
                    $(".select2-search__field").val($(".select2-results__option--highlighted").text())
                }
            });
        });
        $(".select2-search__field").attr("aria-autocomplete", "both");
        $("#HomePageBIButton").click(function () {
            $(".BIWaitingTime").text($("#selectHomePageBI").val());
            $("#HomePageBIButton").addClass("BIbuttonArrow");
            $("#HomePageBIButton").addClass("fadeIn");
            $(".BIWaitingTime").addClass("fadeIn");

        });
        if (window.matchMedia('(max-width: 768px)').matches && $(".check-time-input").length > 0) {
            $(".check-time-input").select2('destroy');
        }

    }

}

eWave.Event = {
    EditMode: function () {


        jQuery(".event-activities input").change(function () {
            if ($(this).is(":checked")) {
                $(this).parent().siblings().find("input").removeAttr("checked");
            }
        });

        eWave.Event.SaveActivity();
        eWave.LandmarksResources.Init();
    },
    SaveActivity: function () {
        jQuery(".event-activities button").on("click", function () {
            jQuery(".event-activities .message").text("");

            jQuery(".event-activities button").attr("disabled", "disabled")

            var currentWeb = _spPageContextInfo.webServerRelativeUrl.trim();
            if (currentWeb != "/") {
                currentWeb += "/";
            }

            var activityId = jQuery(".event-activities input:checked").val();
            if (activityId == undefined) {
                activityId = "";
            }

            var url = currentWeb + "ach.ashx";
            var options = {};
            options.url = url;
            options.data = {};
            options.data.ach = "UpdateActivity";
            options.data.ActivityId = activityId;
            options.data.pageid = _spPageContextInfo.pageItemId;
            options.data.listid = _spPageContextInfo.pageListId;
            options.type = 'POST';
            $.ajax(options).done(function (response) {

                jQuery(".event-activities button").removeAttr("disabled");

                if (response.success == true) {
                    var reload = "<a href='javascript:window.location.reload();'>לחץ כאן לרענון הדף וצפייה בשינוי</a>";
                    jQuery(".event-activities .message").text("העדכון בוצע בהצלחה. ").append(reload);
                }
                else {
                    jQuery(".event-activities .message").text("אירעה שגיאה: " + response.error);
                }
            }).fail(function (data) {
                console.log(data);
                jQuery(".event-activities .message").text("הפניה לשרות העדכון נכשלה");
            });
        });
    },
    SelectedActivity: null,
    ChangeActivityRegistration: {},
    InitCalendar: function (id, club) {

        eWave.Event.GetEventActivities(id, club, function (response) {
            if (response.length > 0) {
                var data = [];

                jQuery.each(response, function (index, item) {
                    data.push(
            		{
            		    title: item.StartTime,
            		    start: moment(new Date(item.StartDate)).format("Y-MM-DD"),
            		    url: UIResource[eWave.Context.GetCurrentSiteName() + "_event_register_href"] + "?ac_id=" + item.MarketingActivityId + "&ev_id=" + item.MarketingServices
            		});
                });

                $('#fullCalender').fullCalendar({
                    header: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'month,agendaWeek,listWeek'
                    },
                    //defaultDate: '2017-02-12',
                    navLinks: true, // can click day/week names to navigate views
                    editable: false,
                    eventLimit: true, // allow "more" link when too many events
                    events: data,
                    eventAfterAllRender: function () {
                        $('#fullCalender .fc-prev-button').attr("aria-label", UIResource.prev_month);
                        $('#fullCalender .fc-next-button ').attr("aria-label", UIResource.next_month);
                        $("#fullCalender .fc-center h2").attr("tabindex", "0");
                        $("#fullCalender .fc-content").attr("tabindex", "0").each(function (index) {
                            var date = $(".fc-event-container:eq(0)").closest("tbody").prev("thead").find("td:eq(" + index + ")").attr("data-date");
                            var title = $(this).find(".fc-title").text()
                            $(this).attr("aria-label", title + UIResource.on_date + date + UIResource.on_time);
                        })
                    },
                    views: {
                        agenda: {
                            eventLimit: 1 // adjust to 1 only for agendaWeek/agendaDay
                        }
                    }
                });
            }
            else {
                //No events..  
            }
            $('.calenderBox #fullCalender button.fc-next-button').attr('title', UIResource.next_title);
            $('.calenderBox #fullCalender button.fc-prev-button').attr('title', UIResource.previous_title);
            $('.calenderBox #fullCalender .fc-body div.fc-row table tbody td:not([class])').attr('aria-hidden', 'true');//accessibility: aria hidden for days with no tour.
        });
    },
    MyEvents: function () {
        jQuery("#my-events table").on("click", "a", function () {
            eWave.Event.SelectedActivity = jQuery(this).attr("data-activity-id");
            jQuery(".cancel-activity").focus();
            //jQuery(".modal").modal('show');
        });

        jQuery("#my-events").on("click", ".cancel-activity", function () {
            jQuery("#my-events .error").text("");

            if (eWave.Event.SelectedActivity != null) {
                showLoader();
                var userData =
    			{
    			    ActivityId: eWave.Event.SelectedActivity,
    			    GovermentId: jQuery("#my-events").attr("goverment-id")
    			};

                var options = {};
                options.url = '/WebApi/api/events/CancelEventRegistration';
                options.data = userData;
                options.type = 'POST';
                //options.headers = { 'Content-Type': 'application/json' };

                $.ajax(options).done(function (response) {
                    hideLoader();
                    if (response.ResponseErrorCode == 1) {
                        jQuery("#confirm-cancel").modal('hide');
                        jQuery("#success-modal").modal();
                    }
                    else {
                        //alert(GetPRMErrorDescription(PrmTypes.JoinActivity, response.data.ResponseErrorCode));
                        jQuery("#my-events .error").text(GetPRMErrorDescription(PrmTypes.CancelActivity, response.ResponseErrorCode));
                    }
                }).fail(function (data) {
                    hideLoader();
                    console.log(data);
                    jQuery("#my-events .error").text(UIResource.Form_Error_Unexpected);
                });

                eWave.Event.SelectedActivity = null;

            }
        });

        jQuery("#my-events").on("click", "#success-modal button", function () {
            window.location.reload()
        });

        eWave.Event.ChangeDateInit();


    },
    ChangeDateInit: function () {
        jQuery("#my-events").on("click", ".change-date", function () {
            showLoader();
            var eventid = jQuery(this).attr("data-event-id");
            var currentActivityId = jQuery(this).attr("data-activity-id");

            eWave.Event.ChangeActivityRegistration.CancelActivityId = currentActivityId;

            //Get the activities of the selected event
            eWave.Event.GetEventActivities(eventid, 1, function (response) {
                hideLoader();
                if (response.length > 0) {
                    var data = [];

                    //Gather the activities, excluding the current one
                    jQuery.each(response, function (index, item) {
                        if (item.MarketingActivityId != currentActivityId) {
                            data.push(
		            		{
		            		    title: item.StartTime,
		            		    start: moment(new Date(item.StartDate)).format("Y-MM-D"),
		            		    activity: item.MarketingActivityId,
		            		    url: "javascript:void(0)"
		            		});
                        }
                    });

                    //If there are more activities for the event, show a calendar picker in modal dialog.
                    jQuery("#fullcalendar .fc-event").removeClass("selected");
                    jQuery('#change-date').on('shown.bs.modal', function () {
                        jQuery('#fullcalendar').fullCalendar({
                            header: {
                                left: 'prev,next today',
                                center: 'title',
                                right: ''
                                //right: 'month,agendaWeek,agendaDay,listWeek'
                            },
                            //defaultDate: '2017-02-12',
                            navLinks: true, // can click day/week names to navigate views
                            editable: false,
                            eventLimit: true, // allow "more" link when too many events
                            events: data,
                            eventClick: function (calEvent, jsEvent, view) {
                                if ($(this).hasClass("selected") == true) {
                                    eWave.Event.ChangeActivityRegistration.NewActivityId = null;
                                    $(this).removeClass("selected");
                                }
                                else {
                                    //Save the new activity id, used in the update action
                                    eWave.Event.ChangeActivityRegistration.NewActivityId = calEvent.activity;
                                    jQuery("#fullcalendar .fc-event").removeClass("selected");
                                    $(this).addClass("selected");
                                }
                            }
                        });
                    });

                    if (data.length > 0) {
                        jQuery("#change-date").modal();
                    }
                    else //No activivites, show message
                    {
                        jQuery("#no-events").modal();
                    }
                }
                else {
                    jQuery("#no-events").modal();
                }
            });
        });

        eWave.Event.SaveChangeDate();
    },
    SaveChangeDate: function () {
        jQuery("#my-events").on("click", ".change-activity", function () {
            jQuery("#my-events .error").text("");

            if (eWave.Event.ChangeActivityRegistration.NewActivityId != null) {

                eWave.Event.ChangeActivityRegistration.GovermentId = jQuery("#my-events").attr("goverment-id");

                var options = {};
                options.url = '/WebApi/api/events/UpdateEventRegistration';
                options.data = eWave.Event.ChangeActivityRegistration;
                options.type = 'POST';

                showLoader();

                $.ajax(options).done(function (response) {
                    hideLoader();
                    if (response.ResponseErrorCode == 1) {
                        jQuery("#change-date").modal('hide');
                        jQuery("#success-modal").modal();
                    }
                    else {
                        jQuery("#my-events .error").text(GetPRMErrorDescription(PrmTypes.CancelActivity, response.ResponseErrorCode));
                    }
                }).fail(function (data) {
                    hideLoader();
                    console.log(data);
                    jQuery("#my-events .error").text(UIResource.Form_Error_Unexpected);
                });

                eWave.Event.ChangeData.NewActivityId = null;

            }
            else {
                jQuery("#my-events .error").text("לא נבחר מועד");
            }
        });
    },
    GetEventActivities: function (eventid, club, onSuccess) {
        //Get event activities
        var MarketingActivityRequest =
		{
		    MarketingServices: eventid,
		    Club: club
		};

        var options = {};
        options.url = '/WebApi/api/events/GetMarketingActivities';
        options.data = MarketingActivityRequest;
        options.type = 'POST';

        $.ajax(options).done(onSuccess)
        			   .fail(function (data) {
        			       hideLoader();
        			       console.log("Failed to get events");
        			       console.log(data);

        			   });
    }
}

eWave.Surgery = {
    Init: function () {
        eWave.LandmarksResources.Init();
        eWave.Unit.GetUnitsByCurrentPage
            (
                function (data) {

                    if (data.d.query.PrimaryQueryResult.RelevantResults.Table.Rows.results.length > 0) {
                        jQuery(".units-links").removeClass("hidden");
                    }

                    $(data.d.query.PrimaryQueryResult.RelevantResults.Table.Rows.results).each(function (index, item) {
                        //alert(this.Cells.results[2].Key + ":" + this.Cells.results[2].Value);
                        var title = item.Cells.results[2].Value;
                        var path = item.Cells.results[4].Value;

                        path = path.replace(UIResource.site_admin_url, UIResource.site_anon_url);

                        jQuery(".units-links .sub-titles").append(jQuery("<div class=\"text\"><a href=\"" + path + "\">" + title + "</a></div>"));

                    });
                },
                function (err) {
                    console.log(err);
                }
            );
        var SecondaryHeader = $.trim($('.page-header.page-header-xs .container h2').text())
        if (SecondaryHeader === "") {
            $(".page-header.page-header-xs .container h2").remove();
        }
    }
}

eWave.Unit = {
    Init: function () {
        eWave.LandmarksResources.Init();

        $('.Lis-wrapper .subtitles-list-title img').each(function () {
            $(this).attr("src", "/Style%20Library/Tasmc/Images/lis/bullet_liss.png");
        });
        $('.Lis-wrapper .quotation img').each(function () {
            $(this).attr("src", "/Style%20Library/Tasmc/Images/lis/lis_queote.png");
        });
        if ($('.CurrentNavWraper').length && $('.CurrentNavWraper .list-group-item').length) {
            $('.CurrentNavWraper .side-nav').removeClass('margin-bottom-60');
        }
        if ($("a.s4-breadcrumbNode").length == 0) {
            $("a.ewResponsibleUnit").remove();
        }
        else {
            for (var i = 0; i < $("a.s4-breadcrumbNode").length; i++) {
                var str = $("a.s4-breadcrumbNode:eq(" + i + ")").text();
                str = str.replace(/"|'/g, '');
                for (var j = 0; j < $(".ewResponsibleUnit span").length; j++) {
                    var x = $(".ewResponsibleUnit span")[j].title;
                    x = x.replace(/"|'/g, '');
                    if (x == str) {
                        $(".ewResponsibleUnit").attr("href", $("a.s4-breadcrumbNode:eq(" + i + ")").attr("href"));
                        $(".ewResponsibleUnit span").text($(".ewResponsibleUnit span")[j].title);
                    }
                }
            }
            $(".ewResponsibleUnit :not(:first)").remove();
        }
    },
    CurrentPageUnits: [],
    GetUnitsByCurrentPage: function (successCallback, errorCallback) {
        var unitsQuery = "";

        jQuery(".units-hidden span").each(function (index, item) {
            eWave.Unit.CurrentPageUnits.push(jQuery(item).text().split('|')[1]);
            var unit = "ewUnit:\"" + encodeURIComponent(jQuery(item).text().split('|')[0]) + "\"";

            if (index == 0) {
                unitsQuery = unit;
            }
            else {
                unitsQuery += " OR " + unit;
            }
        });

        var currentLanguage = _spPageContextInfo.currentUICultureName.split('-')[0];

        if (unitsQuery != "") {
            $.ajax({
                url: "/_api/search/query?querytext='ContentTypeId:" + UIResource.unit_contenttype_id + " AND (" + unitsQuery + ")'&selectproperties='ewUnit,IsQueueReservationEnabledOWSBOOL,Path,FileName,Title,owstaxidewUnit'&rowlimit=10&trimduplicates=false&QueryTemplatePropertiesUrl='spfile://webroot/QueryParameterTemplate.xml'",
                type: "GET",
                headers:
                    {
                        "accept": "application/json;odata=verbose",
                        "content-type": "application/json;odata=verbose"
                    },
                dataType: "json",
                success: successCallback,
                error: errorCallback
            });
        }

    },

    BI: function (monthCode, yearCode) {
        var url = "/WebApi/api/bi/GetByCodes";
        var options = {};
        options.url = url;
        options.data = {};
        options.data.codes = [monthCode, yearCode];
        options.type = 'GET';
        $.ajax(options).done(function (response) {
            if (response != null) {
                if (response.length != 0) {
                    var monthlyData = jQuery.grep(response, function (item, index) {
                        return (item.Code == monthCode);
                    });

                    var yearData = jQuery.grep(response, function (item, index) {
                        return (item.Code == yearCode);
                    });

                    var chart = AmCharts.makeChart("chartdiv", {
                        "type": "serial",
                        "theme": "light",
                        "addClassNames": true,
                        "dataProvider": eWave.Graph.FormatMonthData(monthlyData),
                        "valueAxes": [{
                            "axisAlpha": 0,
                            //"position": "left",
                            "labelOffset": 20

                        }],
                        "startDuration": 1,
                        "graphs": [{
                            //"balloonText": "<b>[[category]]: [[value]]</b>",
                            "showBalloon": false,
                            "fillColorsField": "color",
                            "lineColor": "color",
                            "fillAlphas": 0.9,
                            "lineAlpha": 0.2,
                            "type": "column",
                            "valueField": "Value",
                            "labelPosition": "bottom",
                            "color": "#000",
                            "labelText": "[[value]]"
                        }],
                        "chartCursor": {
                            "categoryBalloonEnabled": false,
                            "cursorAlpha": 0,
                            "zoomable": false
                        },
                        "categoryField": "yAxis",
                        "categoryAxis": {
                            "gridPosition": "start",
                            "labelRotation": 0
                        }
                    });;

                    jQuery("#UnitBi .number").text(Number(yearData[0].Value).toLocaleString('en'));

                }
                else {
                    jQuery("#UnitBi").hide();
                    console.log("didnt find data for the unit codes - " + monthCode + ", " + yearCode);
                }
            }
            else {
                jQuery("#UnitBi").hide();
                console.log("failed to get bi data, see server log for more details");
            }
        }).fail(function (data) {
            jQuery("#UnitBi").hide();
            console.log(data);
        });
    }
}

eWave.Login = {
    Init: function () {
        jQuery(".nav-main .top-links .logout a").addClass("hideMobileLogOut");


        var url = "/ach.ashx";
        var options = {};
        options.url = url;
        options.data = {};
        options.data.ach = "isLogged";
        options.type = 'GET';
        $.ajax(options).done(function (response) {
            if (response.success == true) {
                if (response.data == true) {

                    //SETS disconnect dialog model when user connected, with timeout
                    inActiveTimeOutDialog();

                    ///if the user is logged in and gets to login page, we redirect hom to default redirect url

                    RedirectIfLoggedIn();

                    jQuery(".top-links .logout").css("display", "inline-block");

                    jQuery(".nav-main .top-links .connect a").addClass("hideMobileConnect"); // for mobile nav
                    jQuery(".nav-main .top-links .logout a").removeClass("hideMobileLogOut");
                }
                else {
                    jQuery(".top-links .connect").css("display", "inline-block");

                    jQuery(".nav-main .top-links .logout a").addClass("hideMobileLogOut"); // for mobile nav  
                    jQuery(".nav-main .top-links .connect a").removeClass("hideMobileConnect");
                }
            }
            else {
                console.log("error checking user state, see log in server for more details.");
            }
        }).fail(function (data) {
            console.log(data);
        });
    }
}

eWave.MedicalConditions = {
    Init: function () {


        var letters = UIResource.Alphabet.split(",");
        jQuery("#medical-conditions-local").listnav({
            initLetter: letters[1],
            includeAll: false,
            showCounts: false,
            letters: letters
        });

        jQuery("#medical-conditions-english").listnav({
            initLetter: 'A',
            includeAll: false,
            showCounts: false,
            letters: "_,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,y,u,v,w,x,y,z,-".split(",")
        });

        jQuery(".ln-disabled").unbind("click");

        jQuery(".medical-conditions-index .switch-lang").click(function () {
            if ($('.english-wrapper').is(':hidden')) {
                jQuery(".medical-conditions-index .local-wrapper").fadeOut(function () { jQuery(".medical-conditions-index .english-wrapper").fadeIn('slow'); });
            }
            else {
                jQuery(".medical-conditions-index .english-wrapper").fadeOut(function () { jQuery(".medical-conditions-index .local-wrapper").fadeIn('slow'); });
            }

        });
    }
}

eWave.BenefitsSlider = {
    Init: function () {
        $('.BenefitsSliderContainer').slick({
            dots: true,
            infinite: false,
            speed: 300,
            slidesToShow: 3,
            slidesToScroll: 3,
            responsive: [
                {
                    breakpoint: 1024,
                    settings: {
                        slidesToShow: 3,
                        slidesToScroll: 3,
                        infinite: true,
                        dots: true
                    }
                },
                {
                    breakpoint: 992,
                    settings: {
                        slidesToShow: 2,
                        slidesToScroll: 2
                    }
                },
                {
                    breakpoint: 480,
                    settings: {
                        slidesToShow: 1,
                        slidesToScroll: 1
                    }
                }
                // You can unslick at a given breakpoint now by adding:
                // settings: "unslick"
                // instead of a settings object
            ]
        });
    }
}

eWave.Context = {
    Site:
    {
        BeWell: "BeWell",
        Dana: "Dana",
        MamyLis: "MamyLis",
        Lis: "Lis",
        Regular: ""
    },
    GetCurrentSiteName: function () {
        var currentWebUrl = _spPageContextInfo.webServerRelativeUrl.toLowerCase();

        if (currentWebUrl.startsWith("/be-well")) {
            return eWave.Context.Site.BeWell;
        }
        if (currentWebUrl.startsWith("/dana-dwek")) {
            return eWave.Context.Site.Dana;
        }
        if (currentWebUrl.startsWith("/lis/mamy-lis")) {
            return eWave.Context.Site.MamyLis;
        }
        if (currentWebUrl.startsWith("/lis")) {
            return eWave.Context.Site.Lis;
        }

        return eWave.Context.Site.Regular;
    },
    GetCurrentSiteUrl: function () {
        var currentWebUrl = _spPageContextInfo.webServerRelativeUrl.toLowerCase();

        if (currentWebUrl.endsWith("/be-well")) {
            return "/be-well";
        }
        if (currentWebUrl.endsWith("/dana-dwek")) {
            return "/dana-dwek";
        }
        if (currentWebUrl.endsWith("/lis/mamy-lis")) {
            return "/lis/mamy-lis";
        }
        if (currentWebUrl.endsWith("/lis")) {
            return "/lis";
        }
        return "";
    }
}

eWave.Dana = {
    BI: function () {
        var url = "/WebApi/api/bi/GetByCodes";
        var options = {};
        options.url = url;
        options.data = {};
        options.data.codes = [13, 14, 15, 16]; //Dana codes
        options.type = 'GET';
        $.ajax(options).done(function (response) {
            if (response != null) {
                if (response.length != 0) {
                    var surgery = jQuery.grep(response, function (item, index) {
                        return (item.Code == 13);
                    });

                    var visits = jQuery.grep(response, function (item, index) {
                        return (item.Code == 14);
                    });

                    var experts = jQuery.grep(response, function (item, index) {
                        return (item.Code == 15);
                    });

                    var hospitalization = jQuery.grep(response, function (item, index) {
                        return (item.Code == 16);
                    });

                    surgery = eWave.Graph.FormatMonthData(surgery);
                    visits = eWave.Graph.FormatMonthData(visits);
                    experts = eWave.Graph.FormatMonthData(experts);
                    hospitalization = eWave.Graph.FormatMonthData(hospitalization);

                    AmCharts.makeChart("DanaSurgery", eWave.Dana.GetChartOptions(surgery));
                    AmCharts.makeChart("DanaVisits", eWave.Dana.GetChartOptions(visits));
                    AmCharts.makeChart("DanaExperts", eWave.Dana.GetChartOptions(experts));
                    AmCharts.makeChart("DanaHospitalization", eWave.Dana.GetChartOptions(hospitalization));
                }
                else {
                    jQuery("#DanaBI").hide();
                    console.log("didnt find data for the specified unit codes");
                }
            }
            else {
                jQuery("#DanaBI").hide();
                console.log("failed to get bi data, see server log for more details");
            }
        }).fail(function (data) {
            jQuery("#DanaBI").hide();
            console.log(data);
        });
    },
    GetChartOptions: function (data) {
        return {
            "type": "serial",
            "theme": "light",
            "addClassNames": true,
            "dataProvider": data,
            "valueAxes": [{
                "axisAlpha": 0,
                //"position": "left",
                "labelOffset": 20

            }],
            "startDuration": 1,
            "graphs": [{
                "balloonText": "<strong>[[value]]</strong>",
                "showBalloon": true,
                "fillColorsField": "color",
                "lineColor": "color",
                "fillAlphas": 0.9,
                "lineAlpha": 0.2,
                "type": "column",
                "valueField": "Value",
                "labelPosition": "bottom",
                "color": "#fff",
                "labelText": "[[value]]"

            }],
            "chartCursor": {
                "categoryBalloonEnabled": false,
                "cursorAlpha": 0,
                "zoomable": false
            },
            "categoryField": "yAxis",
            "categoryAxis": {
                "gridPosition": "start",
                "labelRotation": 0
            }
        };
    }
}
eWave.Lis = {
    LisBIGraph: function (surgeriesLisCode, ERLisCode, SpecialistClinicsLisCode, hospitalizeLisCode, boysCode, girlsCode, twinsCode, totalBirthCode) {
        var url = "/WebApi/api/bi/GetByCodes";
        var options = {};
        options.url = url;
        options.data = {};
        options.data.codes = [surgeriesLisCode, ERLisCode, SpecialistClinicsLisCode, hospitalizeLisCode, boysCode, girlsCode, twinsCode, totalBirthCode];
        //options.data.codes = [ERCode, HospitalizeCode, SurgeriesCode];
        options.type = 'GET';
        $.ajax(options).done(function (response) {
            if (response != null) {
                if (response.length != 0) {
                    //var arrResponse = jQuery.parseJSON(response);

                    //Init Babys with data
                    var babysDataArr = jQuery.grep(response, function (item, index) {
                        return (item.Code == boysCode || item.Code == girlsCode || item.Code == twinsCode || item.Code == totalBirthCode);
                    });
                    eWave.Graph.GetBICategoriesCode(babysDataArr);

                    //Init chart with data
                    var triMonthsDataArr = jQuery.grep(response, function (item, index) {
                        return (item.Code == surgeriesLisCode || item.Code == ERLisCode || item.Code == hospitalizeLisCode || item.Code == SpecialistClinicsLisCode);
                    });
                    var chart = AmCharts.makeChart("LisBIChartDiv", {
                        "type": "serial",
                        "theme": "light",
                        "categoryField": "MonthAndYear",
                        "startDuration": 1,
                        "fontFamily": "almonidl,Arial,Helvetica,sans-serif",
                        "fontSize": 20,
                        "graphs": [
                            {
                                "balloonText": "ניתוחים:[[value]]",
                                "fillAlphas": 0.8,
                                "id": "AmGraph-1",
                                "lineAlpha": 0.2,
                                "title": "ניתוחים",
                                "type": "column",
                                "fillColors": "#b5155d",
                                "lineColor": "#b5155d",
                                "labelText": "[[value]]",
                                "labelPosition": "top",
                                "valueField": "SurgeriesLis",
                                "color": "#00000"
                            },
                            {
                                "balloonText": "אישפוזים:[[value]]",
                                "fillAlphas": 0.8,
                                "id": "AmGraph-2",
                                "lineAlpha": 0.2,
                                "title": "אישפוז",
                                "type": "column",
                                "fillColors": "#5b4b9c",
                                "lineColor": "#5b4b9c",
                                "labelText": "[[value]]",
                                "labelPosition": "bottom",
                                "valueField": "HospitalizeLis",
                                "color": "#FFFFFF"
                            },
                            {
                                "balloonText": "מרפאות מומחים:[[value]]",
                                "fillAlphas": 0.8,
                                "id": "AmGraph-3",
                                "lineAlpha": 0.2,
                                "title": "מרפאת מומחים",
                                "type": "column",
                                "fillColors": "#4b7599",
                                "lineColor": "#4b7599",
                                "labelText": "[[value]]",
                                "labelPosition": "bottom",
                                "valueField": "SpecialistClinicsLis",
                                "color": "#FFFFFF"
                            },
                            {
                                "balloonText": "מיון:[[value]]",
                                "fillAlphas": 0.8,
                                "id": "AmGraph-4",
                                "lineAlpha": 0.5,
                                "title": "מיון",
                                "type": "column",
                                "fillColors": "#494A4A",
                                "lineColor": "#494A4A",
                                "labelText": "[[value]]",
                                "labelPosition": "bottom",
                                "valueField": "ERLis",
                                "color": "#FFFFFF"
                            }
                        ],
                        "guides": [],
                        "valueAxes": [
                            {
                                "id": "ValueAxis-1",
                                "position": "left",
                                "axisAlpha": 0,
                                "dashLength": 5,
                                "labelsEnabled": true,
                                "labelOffset": 40
                            }
                        ],
                        "categoryAxis": {
                            "gridThickness": 0,
                            "axisColor": "#d9d9d9"

                        },
                        "responsive": {
                            "enabled": true,
                            "rules": [
                              {
                                  "maxWidth": 800,
                                  "overrides": {
                                      "rotate": true,
                                      "marginRight": 20,
                                      "graphs": [{
                                          "labelPosition": "right",
                                          "labelOffset": 30,
                                          "color": "#00000",
                                          "showAllValueLabels": true
                                      },
                                              {
                                                  "labelPosition": "left",
                                                  "color": "#00000",
                                                  "labelOffset": 50,
                                                  "showAllValueLabels": true
                                              },
                                              {
                                                  "labelPosition": "left",
                                                  "labelOffset": 50,
                                                  "color": "#00000",
                                                  "showAllValueLabels": true
                                              },
                                              {
                                                  "labelPosition": "left",
                                                  "labelOffset": 50,
                                                  "color": "#00000",
                                                  "showAllValueLabels": true
                                              }],
                                      "categoryAxis": {
                                          "labelOffset": 40,
                                          "autoWrap": true
                                      },
                                      "valueAxes": {
                                          "labelsEnabled": false
                                      },
                                      "dataProvider": eWave.Graph.Format3MonthData(triMonthsDataArr, "SHORT")
                                  }
                              },
                              {
                                  "maxWidth": 420,
                                  "overrides": {
                                      "rotate": true,
                                      "marginRight": 20,
                                      "graphs": [{
                                          "labelPosition": "right",
                                          "labelOffset": 30,
                                          "color": "#00000",
                                          "showAllValueLabels": true
                                      },
                                       {
                                           "labelPosition": "left",
                                           "color": "#00000",
                                           "labelOffset": 50,
                                           "showAllValueLabels": true
                                       },
                                       {
                                           "labelPosition": "left",
                                           "labelOffset": 50,
                                           "color": "#00000",
                                           "showAllValueLabels": true
                                       },
                                       {
                                           "labelPosition": "left",
                                           "labelOffset": 50,
                                           "color": "#00000",
                                           "showAllValueLabels": true
                                       }],
                                      "categoryAxis": {
                                          "position": "right",
                                          "tickPosition": "start",
                                          "gridPosition": "start",
                                          "axisThickness": 0
                                      },
                                      "dataProvider": eWave.Graph.Format3MonthData(triMonthsDataArr, "SHORT")
                                  },
                              }

                            ]
                        },
                        "allLabels": [],
                        "balloon": {},
                        "titles": [],
                        "dataProvider": eWave.Graph.Format3MonthData(triMonthsDataArr)
                    });

                    //jQuery("#UnitBi .number").text(Number(yearData[0].Value).toLocaleString('en'));

                }
                else {
                    jQuery(".LisBIContainer").hide();
                    console.log("didnt find data for the unit codes ");
                }
            }
            else {
                jQuery(".LisBIContainer").hide();
                console.log("failed to get bi data, see server log for more details");
            }
        }).fail(function (data) {
            jQuery(".LisBIContainer").hide();
            console.log(data);
        });


    }
}

eWave.PersonalAreaCubes = {
    Init: function () {



        jQuery("#PersonalAreaTopCubes").on("click", ".top-cube a[data-eserv='1']", function (ev) {
            ev.preventDefault();
            var isLogged = jQuery(this).attr("data-logged");

            if (isLogged == "0") {
                //Redirect to login page with source of eservice
                window.location.href = UIResource.Login_Url + "?token=1&Source=" + jQuery(this).attr("data-href");
            }
            else {
                showLoader();
                //Do second login and redirect to eservice
                $.ajax({
                    type: 'POST',
                    url: "/WebApi/api/LoginController/InternalLogin",
                    headers: { 'Content-Type': 'application/json' },
                    success: function (json) {
                        hideLoader();
                        if (json.Sessid != "") {
                            window.location.href = UIResource.EService_Url + "?sessid=" + json.Sessid;
                        }
                        else {
                            window.location.href = UIResource.EService_Url;
                        }
                    },
                    error: function (response) {
                        hideLoader();
                        write2Log("InternalLogin- Error");
                    }
                });
            }
        });
    }
}

eWave.MyDeliveries = {
    Init: function () {
        jQuery("#MyDeliveries").on("click", ".toggle-message", function () {
            jQuery(this).closest("tr").next().find(".content").slideToggle();
            jQuery(this).find("span").toggleClass("glyphicon-menu-left").toggleClass("glyphicon-menu-down");
        });
    }
}


eWave.UnitWithSlider = {
    Init: function (e) {
        //check if needed at unit-test
        //eWave.LandmarksResources.Init();

        window.responseAmCharsFlag = false;
        var sectionsNum = jQuery(".section").length;
        var index;
        $('section').each(function (i, obj) {
            jQuery(this).attr("data-section-title", jQuery(this).find(".ForsideNavTitle").text());
        });

        if (jQuery("#slippry-demo li").length < 2) { // hide slider control button when you have just one item
            jQuery(".sliderControls").hide();
        }
        //for (index = 1; index <= sectionsNum + 1 ; index++) {
        //    jQuery(".bg-section" + index).attr("data-section-title", jQuery(".bg-section" + index + " .ForsideNavTitle").text());
        //}

        jQuery(document).ready(function () {
            var slipprySlides = jQuery('#slippry-demo').slippry({});

            $('.stop').click(function () {
                slipprySlides.stopAuto();
            });
            $('.start').click(function () {
                slipprySlides.startAuto();
            });
            jQuery("#scrollto-section-1,#searchInput,.sy-pager").mouseenter(function () {
                slipprySlides.stopAuto();
            });
            jQuery("#scrollto-section-1").mouseleave(function () {
                slipprySlides.startAuto();
            });

            jQuery(".sliderControls a.start").hide();
            jQuery(".sliderControls a.start").click(function () {
                slipprySlides.startAuto();
                jQuery(this).hide();
                jQuery(".sliderControls a.stop").show();
            });
            jQuery(".sliderControls a.stop").click(function () {
                slipprySlides.stopAuto();
                jQuery(this).hide();
                jQuery(".sliderControls a.start").show();
                jQuery("#scrollto-section-1").unbind('mouseenter mouseleave');
            });





            jQuery(".NewsSliderControls a.start").hide();
            jQuery(".NewsSliderControls a.start").click(function () {
                jQuery(this).hide();
                jQuery(".NewsSliderControls a.stop").show();
            });
            jQuery(".NewsSliderControls a.stop").click(function () {
                jQuery(this).hide();
                jQuery(".NewsSliderControls a.start").show();


            });

            jQuery(".news-strip-container .NewsSliderControls a.start").click(function () {
                jQuery("ul.newsticker li").mouseleave();
            });
            jQuery(".news-strip-container .NewsSliderControls a.stop").click(function () {
                jQuery("ul.newsticker li").mouseenter();
            });
            $("ul.newsticker").mouseleave(function () {
                jQuery(".NewsSliderControls a.stop").show();
                jQuery(".NewsSliderControls a.start").hide();
            });


        });


        //*start* check if needed at unit-test

        //jQuery(".topMain-search.search").hide();
        //jQuery("#s4-workspace").sectionScroll({
        //    easing: 'easeInOutQuart',
        //    scrollDuration: 1200
        //});
        //*end* check if needed at unit-test


        if (window.matchMedia('(min-width: 992px)').matches) {  // cancel sticky header on 992px media quiry 
            var stickyNavTop = $('#header').offset().top;

            var stickyNav = function () {
                var scrollTop = $("#s4-workspace").scrollTop();

                if (scrollTop > stickyNavTop) {
                    $('#header').addClass('sticky');
                    jQuery(".font-lato").addClass("font-lato-sticky");
                    jQuery(".btn-info").addClass("btn-info-sticky");

                    jQuery(".sticky .topMain-search.search").show();

                } else {
                    $('#header').removeClass('sticky');
                    jQuery(".font-lato").removeClass("font-lato-sticky");
                    jQuery(".btn-info").removeClass("btn-info-sticky");

                    jQuery(".topMain-search.search").hide();
                }
            };
            $("#s4-workspace").scroll(function () {
                stickyNav();
            });
        }

        var stickyNavTopActivites = $('#header').offset().top;
        var stickyMobileActivities = function () {
            var scrollTop = $("#s4-workspace").scrollTop();
            if (scrollTop > stickyNavTopActivites) {
                jQuery("#topNav,#topBar,#header").addClass("sticky");
                $('.btn-info').addClass('stickyActivitis');
                jQuery(".actitvites-btn-mobile").show();

                jQuery(".glyphicon-minus").addClass("glyphicon-plus");
                jQuery(".glyphicon-plus").removeClass("glyphicon-minus");
            }
            else {
                $('.btn-info').removeClass('stickyActivitis');
                jQuery("#topNav,#topBar,#header").removeClass("sticky");

                jQuery(".glyphicon-plus").addClass("glyphicon-minus");
                jQuery(".glyphicon-minus").removeClass("glyphicon-plus");

            }
        };

        if (window.matchMedia('(max-width: 992px)').matches) {  // cancel sticky header on 992px media quiry 
            $("#s4-workspace").scroll(function () {
                stickyMobileActivities();
            });
        }

        //*start* check if needed at unit-test


        //// news ticker -  EndLess River plugin
        //if ($('#ticker').length > 0 && $("#ticker").html().replace(/\ /g, '').length > 1) {
        //    $("#ticker").webTicker();
        //}

        //jQuery(".tickercontainer").parent().addClass("tickercontainer-parent");


        //setTimeout(function () {
        //    jQuery(".section-bullets li.active").click();
        //}, 50);

        //if ((navigator.appName == 'Microsoft Internet Explorer' || ((navigator.userAgent.match(/Trident/)) || (navigator.userAgent.match(/rv:11/)) || (typeof $.browser !== "undefined" && $.browser.msie == 1)) && window.location.pathname.indexOf("/ichilov") > -1)) {
        //    eWave.HomePage.HomePageBI(1, 2, 4, 3, 6, 7, 8);
        //}
        //if (window.matchMedia('(max-width: 992px)').matches) {
        //    eWave.HomePage.HomePageBI(1, 2, 4, 3, 6, 7, 8);
        //}

        //*end* check if needed at unit-test

    }


}